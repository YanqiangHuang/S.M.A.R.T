#coding=utf-8

from PIL import Image
import leargist
import os, glob, numpy, sys
os.chdir('/home/amber/Documents/smart_image/malimg_dataset/malimg_paper_dataset_imgs') # the parent folder with sub-folders

reload(sys)
sys.setdefaultencoding( "utf-8" )

# 获取具有恶意软件家族字符串向量
list_fams = os.listdir(os.getcwd()) # vector of strings with family names
print list_fams

# 每个家族的标号
no_imgs = [] # No. of samples per family

# 计算家族中存在的样本数量
for i in range(len(list_fams)):
    os.chdir(list_fams[i])
    len1 = len(glob.glob('*.png')) # assuming the images are stored as 'png'
    no_imgs.append(len1)
    os.chdir('..')

# 所有样本数量，本例中为9339
total = sum(no_imgs) # total number of all samples

# 一维矩阵化向量，初始全零
y = numpy.zeros(total) # label vector

# tmp1:家族数+1
temp1 = numpy.zeros(len(no_imgs)+1)
temp1[1:len(temp1)] = no_imgs
temp2 = int(temp1[0]); # now temp2 is [0 no_imgs]

for jj in range(len(no_imgs)): 
    temp3 = temp2 +int(temp1[jj+1])
    for ii in range(temp2,temp3): 
        y[ii] = jj
    temp2 = temp2+ int(temp1[jj+1])

# print temp2, y

# # Note: This may appear complicated and there may be simpler ways of doing this too. 
# # Now we have the label vector 'y' and the vector with family vectors 'list_fams'. The next step is to obtain the feature matrix 'X'

# X = numpy.zeros((sum(no_imgs), 320)) # Feature Matrix
# cnt = 0
# for i in range(len(list_fams)):
#     os.chdir(list_fams[i])
#     img_list = glob.glob('*.png') # getting png files in this folder
#     for j in range(len(img_list)):
#         im = Image.open(img_list[j])
#         im1 = im.resize((64, 64), Image.ANTIALIAS)
#         des = leargist.color_gist(im1)
#         print des
#         X[cnt] = des[0:320]
#         cnt += 1
#     os.chdir('..')

# print X

# print "stroing feature and label......"

# import cPickle
# cPickle.dump(list_fams, open('img'+'.p', 'wb'))
# numpy.save('img_features.npy', X)
# numpy.save('img_labels.npy', y)